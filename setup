#!/usr/bin/env bash

# Colors
NORMAL="\033[0m"
BOLD="\033[1m"
YELLOW="\033[33m"
RED="\033[31m"

# Usage instructions
help() {
    echo "Usage:"
    echo
    echo -e "\tTo install adhearsion in given folder:"
    echo -e "\t${BOLD}${YELLOW}./setup INSTALL_PATH${NORMAL}"
    echo
    echo -e "\tOr to install adhearsion with freeswitch:"
    echo -e "\t${BOLD}${YELLOW}./setup INSTALL_PATH freeswitch${NORMAL}"
    echo
    echo -e "\tOr to install adhearsion with asterisk:"
    echo -e "\t${BOLD}${YELLOW}./setup INSTALL_PATH asterisk${NORMAL}"
}

SCRIPT_PATH="`dirname \"$0\"`"                    # relative
SCRIPT_PATH="`( cd \"${SCRIPT_PATH}\" && pwd )`"  # absolutized and normalized
if [ -z "${SCRIPT_PATH}" ] ; then
    # error; for some reason, the path is not accessible
    # to the script (e.g. permissions re-evaled after suid)
    echo -e "${BOLD}${RED}Failure:${NORMAL}${RED} for some reason the script path ${YELLOW}${SCRIPT_PATH}${RED} is not accessible (check permissions)${NORMAL}"
    exit 1
fi


INSTALL_PATH=${1}
APP=${2:-adhearsion}

# script starting without arguments of with argument -h or --help
if [[ $1 == "-h" || $1 == "--help" || "${INSTALL_PATH}" == "" ]]; then
    help
    exit 0
fi

if [ -d "${INSTALL_PATH}" ] ; then
    echo -e "${BOLD}${RED}Failure:${NORMAL}${RED} install path ${YELLOW}${INSTALL_PATH}${RED} does already exists${NORMAL}"
    echo
    help
    exit 1
fi

if [[ "${APP}" != "" && \
      "${APP}" != "adhearsion" && \
      "${APP}" != "asterisk" && \
      "${APP}" != "freeswitch" ]]; then
    echo -e "${BOLD}${RED}Failure:${NORMAL}${RED} Wrong argument (application name)${NORMAL}"
    echo
    help
    exit 1
fi

echo -e "\033[4mChecking requirements:${NORMAL}"

echo -e "Checking:${BOLD}${YELLOW} docker${NORMAL}"
bash -c "docker -v > /dev/null 2>&1"
if [[ $? != 0 ]]; then
    echo -e "${RED}Docker is required for this project to run.${NORMAL}"
    echo -e "${RED}For installation instructions, go to: https://docs.docker.com/install/${NORMAL}"
    echo -e "${RED}Exiting!${NORMAL}"
    exit 1
else
    echo -e "${BOLD}OK${NORMAL}"
fi
echo

echo -e "Checking:${BOLD}${YELLOW} docker-compose${NORMAL}"
bash -c "docker-compose -v > /dev/null 2>&1"
if [[ $? != 0 ]]; then
    echo -e "${RED}docker-compose is required for this project to run.${NORMAL}"
    echo -e "${RED}Installation instructions (for sudo user/root):${NORMAL}"
    echo -e "${RED}https://github.com/andrius/.dotfiles/blob/cb856af3435166e8500f1696f6f0870ed0eadf1f/bootstrap-debian.sh#L83:L87${NORMAL}"
    echo -e "${RED}Exiting!${NORMAL}"
    exit 1
else
    echo -e "${BOLD}OK${NORMAL}"
fi
echo

echo -e "Creating installation folder:${YELLOW} ${INSTALL_PATH}${NORMAL}"
mkdir -p ${INSTALL_PATH}
if [[ $? != 0 ]]; then
    echo "${RED}Cannot create installation folder.${NORMAL}"
    echo "${RED}Make sure that such folder does not exist and script do have right permissions to proceed.${NORMAL}"
    echo "${RED}Exiting!${NORMAL}"
    exit 1
else
    echo -e "${BOLD}OK${NORMAL}"
fi
INSTALL_PATH="`( cd \"${INSTALL_PATH}\" && pwd )`"  # absolutized and normalized
echo

echo -e "Bootstraping ${YELLOW}docker environment${NORMAL}"
# Copy adhearsion
cd ${SCRIPT_PATH}/adhearsion

cp --recursive . ${INSTALL_PATH}
# Add/overwrite app specific data
cd ${SCRIPT_PATH}/${APP}
cp --recursive . ${INSTALL_PATH}

# Build all the stuff
cd ${INSTALL_PATH}
touch .env
docker-compose build --force-rm --pull
if [[ $? != 0 ]]; then
    echo -e "${RED}Cannot build docker images\nExiting!${NORMAL}"
    exit 1
fi
echo

if [ "${APP}" == "adhearsion" ]; then
    # nothing to to, adhearsion installed
    echo -e "${GREEN}ahn setup created and tested successfully, enjoy${NORMAL}"
elif [ "${APP}" == "asterisk" ]; then
    # Asterisk host where adhearsion should connect to (asterisk in docker)
    echo "AHN_ASTERISK_HOST=asterisk" >> .env

    # SIP password and asterisk manager credentials
    CREDENTIALS=$(docker run -ti --rm alpine sh -c 'apk --update add pwgen > /dev/null 2>&1 && pwgen --capitalize --ambiguous -C 24 3')
    echo "ASTERISK_SIP_PASSWORD=$(echo -n ${CREDENTIALS} | cut -d' ' -f 1)" >> .env
    echo "ASTERISK_MANAGER_USERNAME=$(echo -n ${CREDENTIALS} | cut -d' ' -f 2)" >> .env
    echo "ASTERISK_MANAGER_PASSWORD=$(echo -n ${CREDENTIALS} | cut -d' ' -f 3)" >> .env

    docker-compose up -d asterisk ahn
    sleep 30
    RES=$(docker-compose logs --tail=1000 ahn | grep 'Connected to Rayo server')
    docker-compose stop
    sleep 5
    docker-compose rm -f
    # echo
    # echo
    # echo -e "Test results: ${RES}"
    # echo
    if [ "${RES}" = "" ]; then
        echo -e "${RED}Cannot connect ahn app with asterisk (were checking for logs line 'Connected to Rayo server')${NORMAL}"
        exit 1
    fi
    echo -e "${GREEN}ahn setup with asterisk created and tested successfully, enjoy${NORMAL}"

elif [ "${APP}" == "freeswitch" ]; then
    # try to up freeswitch and adhearsion and get them working together
    echo "fs"
fi
